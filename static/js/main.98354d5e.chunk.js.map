{"version":3,"sources":["core/config/theme.ts","core/api/Api.ts","core/stores/CommonsStore.ts","core/stores/stores.tsx","core/components/SideMenu/SideMenu.tsx","core/components/SnackBar/SnackBar.tsx","core/components/Layouts/Layout.tsx","core/config/items.tsx","core/components/SearchField/SearchField.tsx","core/components/SimpleTable/SimpleTable.tsx","core/helpers/stringToColour.tsx","feature/aboutUs/views.tsx","feature/builds/views.tsx","feature/branches/views.tsx","core/config/routes.tsx","feature/layout/mainView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["color","theme","createMuiTheme","typography","palette","primary","main","blue","secondary","lightBlue","type","RemoteApi","baseUrl","headers","axios","this","create","baseURL","defaults","url","config","conf","params","getMethod","get","response","data","CommonsStore","makeObservable","sideMenuDrawerExpanded","error","closeSnacks","success","undefined","observable","action","mainStore","api","commonsStore","StoreContext","createContext","useStore","useContext","useStyles","makeStyles","createStyles","root","display","appTitle","alignItems","content","backgroundColor","background","default","flexGrow","minWidth","overflowY","padding","spacing","drawer","flexShrink","whiteSpace","width","drawerOpen","transition","transitions","easing","sharp","duration","enteringScreen","drawerClose","overflowX","leavingScreen","listItems","maxHeight","sideMenuCollapseItem","position","bottom","paper","drawerWidth","icons","light","link","textDecoration","image","marginLeft","marginRight","marginTop","maxWidth","SideMenu","observer","props","classes","expanded","items","logoSrc","landingPageLink","children","className","Drawer","variant","clsx","to","Typography","noWrap","alt","src","List","map","value","key","ListItem","button","ListItemIcon","icon","ListItemText","title","Divider","onClick","toggleSideMenuDrawerExpanded","ChevronLeft","ChevronRight","Alert","elevation","CustomSnackbar","open","handleClose","event","reason","Snackbar","autoHideDuration","onClose","severity","topRightUserActionButtons","top","right","Layout","logo","repoLink","appVersion","Tooltip","IconButton","aria-label","Info","window","location","href","GitHub","mainItems","AccountTree","margin","searchBar","iconButton","SearchField","React","useState","text","setText","placeholder","executeSearch","onChange","target","onKeyPress","InputProps","endAdornment","Search","useUniversalStyles","table","flex","dark","float","headerCell","fontWeight","carousel","height","SimpleTable","useLocation","history","useHistory","urlParams","useMemo","URLSearchParams","search","queryParams","page","Array","from","param","isNaN","newError","getInitParams","setPage","searchText","setSearchText","loading","setLoading","order","setOrder","columns","name","orderBy","setOrderBy","total","setTotal","setData","rowsPerPage","setRowsPerPage","resourceName","useEffect","loadData","updateUrl","delete","push","pathname","getList","searchConfig","limit","offset","sort_by","filterField","getConfig","then","count","catch","e","message","setSorting","property","pickColor","idx","str","hash","i","length","charCodeAt","colour","toString","substr","stringToColour","id","TableContainer","component","Paper","Table","TableHead","TableRow","column","TableCell","align","sortDirection","TableSortLabel","active","direction","TableBody","row","style","number","idx2","colSpan","CircularProgress","TablePagination","rowsPerPageOptions","onChangePage","newPage","set","onChangeRowsPerPage","parseInt","Index","process","routes","handler","match","exact","path","mainView","Object","keys","route","render","App","createBrowserHistory","CssBaseline","Provider","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.98354d5e.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\n\nconst color = {} as any;\ncolor.blue = \"rgb(55,41,167)\";\ncolor.lightBlue = \"rgb(79,76,167)\";\ncolor.black = \"#000\";\n\n\nexport const theme = createMuiTheme({\n  typography: {},\n  palette: {\n    primary: {\n      main: color.blue\n    },\n    secondary: {\n      main: color.lightBlue\n    },\n    type: \"light\"\n  }\n});\n","import axios, {AxiosInstance} from \"axios\";\n\nexport interface Api {\n    getList<T>(url: string, data?: {}, config?: {}): Promise<any>;\n}\n\nexport class RemoteApi implements Api {\n    public readonly baseUrl: string;\n    private readonly axios: AxiosInstance;\n\n    public constructor(baseUrl: string, headers: any) {\n        this.baseUrl = baseUrl;\n        this.axios = axios.create({\n            baseURL: this.baseUrl,\n            headers\n        });\n        this.axios.defaults.headers[\"Authorization\"] = \"token \" + process.env.REACT_APP_API_KEY\n    }\n\n    public async getList<T>(\n        url: string,\n        config?: {}\n    ): Promise<any> {\n        const conf = {params: {...config}};\n        return await this.getMethod<any>(url, conf);\n    }\n\n    public async getMethod<T>(url: string, config?: {}): Promise<T> {\n        const response = await this.axios.get<T>(url, config);\n        return response.data;\n    }\n\n}\n","import {action, makeObservable, observable} from \"mobx\";\n\nexport default class CommonsStore {\n\n  @observable error?: string;\n  @observable success?: string;\n  @observable sideMenuDrawerExpanded: boolean;\n  @observable guiVersion?: string;\n\n  public constructor() {\n    makeObservable(this);\n    this.sideMenuDrawerExpanded = false;\n  }\n\n  @action\n  public toggleSideMenuDrawerExpanded() {\n    this.sideMenuDrawerExpanded = !this.sideMenuDrawerExpanded;\n  }\n\n  @action\n  public newError(error: string) {\n    this.closeSnacks();\n    this.error = error;\n  }\n\n  @action\n  public newSuccess(success: string) {\n    this.closeSnacks();\n    this.success = success;\n  }\n\n  @action\n  public closeSnacks() {\n      this.success = undefined;\n      this.error = undefined;\n  }\n}","import {RemoteApi} from \"../api/Api\";\nimport {createContext, useContext} from \"react\";\nimport CommonsStore from \"./CommonsStore\";\n\nconst url = process.env.REACT_APP_API_URL || \"/api\";\nconst resource = process.env.REACT_APP_API_RESOURCE_URL || \"/resource\";\n\nconst headers = {\n    \"Travis-API-Version\": \"3\"\n};\n\nconst api = new RemoteApi(url + resource, headers);\nconst commonsStore = new CommonsStore();\n\nexport const mainStore = {\n    api,\n    commonsStore\n};\n\nexport const StoreContext = createContext(mainStore);\n\nexport const useStore = () => {\n    return useContext(StoreContext);\n};","import Drawer from \"@material-ui/core/Drawer\";\nimport {\n    createStyles,\n    Theme,\n} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {\n    Divider, List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport {ChevronLeft, ChevronRight} from \"@material-ui/icons\";\nimport clsx from 'clsx';\nimport {makeStyles} from \"@material-ui/styles\";\nimport {ListItemObj} from \"../../config/items\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../stores/stores\";\n\nexport const drawerWidth = 265;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: \"flex\"\n        },\n        appTitle: {\n            display: \"flex\",\n            alignItems: \"center\"\n        },\n        content: {\n            backgroundColor: theme.palette.background.default,\n            flexGrow: 1,\n            minWidth: 0, // So the Typography noWrap works\n            overflowY: \"auto\",\n            padding: theme.spacing(3)\n        },\n        drawer: {\n            flexShrink: 0,\n            whiteSpace: \"nowrap\",\n            width: drawerWidth\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            })\n        },\n        drawerClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            width: theme.spacing(7) + 1\n        },\n        listItems: {\n            maxHeight: \"calc(100% - 116px)\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\"\n        },\n        sideMenuCollapseItem: {\n            position: \"absolute\",\n            bottom: 0,\n            backgroundColor: theme.palette.background.paper,\n            width: drawerWidth - 1\n        },\n        icons: {\n            color: theme.palette.secondary.light\n        },\n        link: {\n            textDecoration: \"none\"\n        },\n        image: {\n            marginLeft: 10,\n            marginRight: 10,\n            marginTop: 8,\n            maxWidth: 40\n        }\n    }),\n);\n\ninterface SideMenuProps {\n    items: ListItemObj[];\n    logoSrc?: string;\n    landingPageLink?: string;\n    appTitle?: string;\n}\n\n\nexport const SideMenu = observer(\n    (props: React.PropsWithChildren<SideMenuProps>) => {\n\n        const classes = useStyles();\n        const {commonsStore} = useStore();\n        const expanded = commonsStore.sideMenuDrawerExpanded;\n        const {items, logoSrc, landingPageLink, appTitle, children} = props;\n\n        const onCollapseClick = () => {\n            commonsStore.toggleSideMenuDrawerExpanded();\n        };\n\n        return (\n            <div className={classes.root}>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: commonsStore.sideMenuDrawerExpanded,\n                        [classes.drawerClose]: !commonsStore.sideMenuDrawerExpanded,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: commonsStore.sideMenuDrawerExpanded,\n                            [classes.drawerClose]: !commonsStore.sideMenuDrawerExpanded,\n                        }),\n                    }}\n                >\n                  <span className={classes.appTitle}>\n                    <Link to={landingPageLink ? landingPageLink : \"\"}>\n                    <Typography variant=\"h6\" noWrap={true}>\n                        <img alt=\"logo\" className={classes.image} src={logoSrc}/>\n                      </Typography>\n                    </Link>\n                    <Typography variant={\"h6\"}>{appTitle}</Typography>\n                  </span>\n                    <div className={classes.listItems}>\n                        <List>\n                            {items.map(value => {\n                                return <NavLink to={value.to} key={value.key + \"nav\"} className={classes.link}>\n                                    <ListItem button key={value.key}>\n                                        <ListItemIcon className={classes.icons}>{value.icon}</ListItemIcon>\n                                        <ListItemText primary={value.title}/>\n                                    </ListItem>\n                                </NavLink>\n                            })}\n                        </List>\n                    </div>\n                    <div className={classes.sideMenuCollapseItem}>\n                        <Divider/>\n                        <ListItem button onClick={onCollapseClick}>\n                            <ListItemIcon>\n                                {expanded ? <ChevronLeft/> : <ChevronRight/>}\n                            </ListItemIcon>\n                            <ListItemText primary={\"Collapse side menu\"}/>\n                        </ListItem>\n                    </div>\n                </Drawer>\n                <main className={classes.content}>\n                    {children}\n                </main>\n            </div>\n        );\n    });\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {makeStyles, Theme} from '@material-ui/core/styles';\nimport {useStore} from \"../../stores/stores\";\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\nimport {observer} from \"mobx-react-lite\";\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport const CustomSnackbar = observer(() => {\n    const classes = useStyles();\n    const {commonsStore} = useStore();\n    const open = commonsStore.success !== undefined || commonsStore.error !== undefined;\n\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        commonsStore.closeSnacks();\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={commonsStore.success ? \"success\" : \"error\"}>\n                    {commonsStore.success || commonsStore.error}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n});","import React, {ReactNode} from \"react\";\nimport {SideMenu} from \"../SideMenu/SideMenu\";\n\nimport {createStyles, IconButton, makeStyles, Theme} from \"@material-ui/core\";\nimport {GitHub, Info} from \"@material-ui/icons\";\nimport {ListItemObj} from \"../../config/items\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {CustomSnackbar} from \"../SnackBar/SnackBar\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        topRightUserActionButtons: {\n            position: \"absolute\",\n            top: 0,\n            right: 0\n        }\n    })\n);\n\nexport interface LayoutInterface {\n    logo?: any;\n    items: ListItemObj[];\n    appTitle?: string;\n    landingPageLink?: string;\n    children: ReactNode;\n    repoLink: string;\n    appVersion: string\n\n}\n\nexport const Layout = (props: LayoutInterface) => {\n    const classes = useStyles();\n    const {\n        appTitle,\n        items,\n        logo,\n        children,\n        landingPageLink,\n        repoLink,\n        appVersion\n    } = props;\n\n    const redirectToGit = () => {\n        window.location.href = repoLink\n    };\n\n    return (\n        <>\n            <SideMenu\n                logoSrc={logo}\n                landingPageLink={landingPageLink}\n                items={items}\n                appTitle={appTitle}\n            >\n                <div className={classes.topRightUserActionButtons}>\n                    <Tooltip title={<p> App version: {appVersion} </p>}>\n                        <IconButton aria-label=\"Info\">\n                            <Info/>\n                        </IconButton>\n                    </Tooltip>\n                    <IconButton aria-label=\"Git\" onClick={redirectToGit}>\n                        <GitHub/>\n                    </IconButton>\n                </div>\n                {children}\n                <CustomSnackbar/>\n            </SideMenu>\n        </>\n    );\n};","import React, {ReactChildren} from \"react\";\nimport ListIcon from '@material-ui/icons/List';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {AccountTree} from \"@material-ui/icons\";\n\nexport interface ListItemObj {\n    key: string;\n    to: string;\n    title: string | ReactChildren;\n    icon: any\n}\n\nexport const mainItems: ListItemObj[] = [\n    {\n        key: \"builds\",\n        to: \"/builds\",\n        title: \"Builds\",\n        icon: <ListIcon/>\n    },\n    {\n        key: \"branches\",\n        to: \"/branches\",\n        title: \"Branches\",\n        icon: <AccountTree/>\n    },\n    {\n        key: \"about\",\n        to: \"/aboutUs\",\n        title: \"About Us\",\n        icon: <InfoIcon/>\n    },\n];","import {IconButton} from \"@material-ui/core\";\nimport {Theme} from '@material-ui/core/styles';\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport OrgTextField from \"@material-ui/core/TextField/TextField\";\nimport {Search} from \"@material-ui/icons\";\nimport React from 'react';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: 5,\n            display: \"inline-block\"\n        },\n        searchBar: {\n            margin: '0 auto',\n            width: 300,\n        },\n        iconButton: {\n            padding: 10,\n        }\n    })\n);\n\nexport interface SearchFieldProps {\n    placeholder?: string,\n    executeSearch: (text: string) => void\n}\n\nexport const SearchField = (props: SearchFieldProps) => {\n\n    const [text, setText] = React.useState<string>(\"\");\n    const {placeholder, executeSearch} = props;\n    const classes = useStyles();\n\n    const handleKeySearch = (event: any) => {\n        if (event.key === \"Enter\") {\n            executeSearch(text);\n        }\n    };\n\n    const handleChange = (event: any) => {\n        setText(event.target.value);\n    };\n\n    const handleSearch = () => {\n        executeSearch(text);\n    };\n\n    return (\n        <div className={classes.root}>\n            <OrgTextField\n                placeholder={placeholder}\n                onChange={handleChange}\n                onKeyPress={handleKeySearch}\n                value={text}\n                variant=\"outlined\"\n                className={classes.searchBar}\n                margin=\"dense\"\n                InputProps={{\n                    endAdornment: (\n                        <IconButton className={classes.iconButton}\n                                    aria-label=\"search\"\n                                    onClick={handleSearch}>\n                            <Search/>\n                        </IconButton>\n                    ),\n                }}\n            />\n        </div>\n    );\n};\n","import React, {useEffect, useMemo} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {CircularProgress, TableSortLabel, Typography} from \"@material-ui/core\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {useStore} from \"../../stores/stores\";\nimport {useHistory, useLocation} from \"react-router\";\nimport CommonsStore from \"../../stores/CommonsStore\";\nimport {stringToColour} from \"../../helpers/stringToColour\";\nimport {theme} from \"../../config/theme\";\nimport {SearchField} from \"../SearchField/SearchField\";\n\nexport const useUniversalStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    title: {\n        padding: '10px',\n        flex: '1 1 100%',\n        color: theme.palette.primary.dark,\n        float: 'left'\n    },\n    headerCell: {\n        fontWeight: 'bold'\n    },\n    carousel: {\n        height: '830px',\n    }\n});\n\nexport interface ColumnModel {\n    name: string;\n    title: string;\n}\n\ninterface SimpleTableProps {\n    title: string;\n    columns: ColumnModel[];\n    resourceName: string;\n    filterField?: string;\n}\n\ntype Order = 'asc' | 'desc';\n\n\nconst getInitParams = (urlParams: URLSearchParams, commonsStore: CommonsStore) => {\n    let page = 0;\n    Array.from(urlParams).map((param) => {\n        if (param[0] === \"page\" && !isNaN(+param[1]) && +param[1] > -1) {\n            page = +param[1]\n        } else {\n            commonsStore.newError(`Page should be number > 0`)\n        }\n    });\n    return page;\n};\n\n\nexport default function SimpleTable(props: SimpleTableProps) {\n\n    const location = useLocation();\n    const history = useHistory();\n    const {commonsStore} = useStore();\n\n    const urlParams = useMemo(() => {\n        return new URLSearchParams(location.search);\n    }, [location.search]);\n\n    const queryParams = useMemo(() => {\n        return getInitParams(urlParams, commonsStore);\n    }, [urlParams]);\n\n    const [page, setPage] = React.useState<number>(+queryParams);\n    const [searchText, setSearchText] = React.useState<string>(\"\");\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const [order, setOrder] = React.useState<Order>('desc');\n    const [orderBy, setOrderBy] = React.useState<string>(props.columns[0].name);\n    const [total, setTotal] = React.useState<number>(0);\n    const [data, setData] = React.useState<any>([]);\n    const [rowsPerPage, setRowsPerPage] = React.useState<number>(5);\n\n    const classes = useUniversalStyles();\n    const {title, columns, resourceName} = props;\n    const {api} = useStore();\n\n    useEffect(() => {\n        loadData();\n    }, [page, rowsPerPage, order, orderBy, searchText]);\n\n\n    useEffect(() => {\n        updateUrl();\n    }, [page]);\n\n\n    const updateUrl = () => {\n        if (urlParams.get(\"page\") === \"0\") {\n            urlParams.delete(\"page\")\n        }\n        history.push({\n            pathname: location.pathname,\n            search: `?${urlParams}`\n        })\n    };\n\n    const getConfig = () => {\n        const searchConfig: any = {\n            limit: rowsPerPage,\n            offset: rowsPerPage * page,\n            sort_by: orderBy + \":\" + order\n        };\n        if (props.filterField && searchText!==\"\") {\n            searchConfig[props.filterField] = searchText\n        }\n        return searchConfig;\n    };\n\n    const loadData = () => {\n        setLoading(true);\n        api.getList(resourceName, getConfig()).then((data: any) => {\n            setLoading(false);\n            setData(data[resourceName]);\n            setTotal(data['@pagination'].count);\n        }).catch((e: any) => {\n            commonsStore.newError(e.message)\n        })\n    };\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n        urlParams.set(\"page\", newPage.toString());\n        setPage(newPage);\n    };\n\n    const toggleOrder = () => {\n        if (order === 'asc') {\n            setOrder('desc')\n        } else {\n            setOrder('asc')\n        }\n    };\n\n    const setSorting = (property: any) => (event: React.MouseEvent<unknown>) => {\n        if (property === orderBy) {\n            toggleOrder()\n        } else {\n            setOrder('desc');\n            setOrderBy(property)\n        }\n    };\n\n    const handleChangeRowsPerPage = (\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    ) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleSearch = (text: string) => {\n        setSearchText(text)\n    };\n\n    const pickColor = (name: string, idx: number) => {\n        if (idx % 2 === 0 && name) {\n            return stringToColour(name);\n        } else {\n            return \"rgb(255,255,255)\"\n        }\n    };\n\n    return <div>\n        <Typography className={classes.title} variant=\"h5\" id=\"tableTitle\">\n            {title}\n        </Typography>\n\n        {props.filterField ?\n            <SearchField\n                placeholder={\"Search by \" + props.filterField}\n                executeSearch={handleSearch}/>\n            :\n            null\n        }\n\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow key={\"headerRow\"}>\n                        {columns.map((column, idx) =>\n                            <TableCell align=\"center\"\n                                       key={\"headCell\" + idx}\n                                       className={classes.headerCell}\n                                       sortDirection={orderBy === column.name ? order : false}>\n                                <TableSortLabel\n                                    active={orderBy === column.name}\n                                    key={\"sortLabel\" + idx}\n                                    direction={orderBy === column.name ? order : 'asc'}\n                                    onClick={setSorting(column.name)}\n                                >\n                                    {column.title}\n                                </TableSortLabel>\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.length ?\n                        data.map((row: any, idx: number) => (\n                            <TableRow key={\"genericRow\" + idx}\n                                      style={{backgroundColor: pickColor(row.number || row.name, idx)}}>\n                                {columns.map((column, idx2) =>\n                                    <TableCell align=\"center\"\n                                               key={\"genericCell\" + idx + \"at\" + idx2}>{row[column.name] + \"\"}</TableCell>\n                                )}\n                            </TableRow>\n                        ))\n                        :\n                        <TableRow key={'empty'}>\n                            <TableCell colSpan={columns.length} align=\"center\" key={\"emptyCell\"}>\n                                {\n                                    loading ? <CircularProgress/> : <>No data to show</>\n                                }\n\n                            </TableCell>\n                        </TableRow>\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n        <TablePagination\n            rowsPerPageOptions={[5, 10, 15]}\n            component=\"div\"\n            count={total}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n}","export const stringToColour = (str: string) => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = \"#\";\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xff;\n        colour += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return colour;\n};\n","import React from \"react\";\nimport {Route, RouteComponentProps, Switch} from \"react-router\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport {Carousel} from \"react-responsive-carousel\";\nimport {Typography} from \"@material-ui/core\";\nimport {useUniversalStyles} from \"../../core/components/SimpleTable/SimpleTable\";\n\nexport const About = {\n    url: \"aboutUs\",\n    handler: (props: RouteComponentProps<any>) => {\n        const baseUrl = props.match.url;\n        return <Switch>\n            <Route exact={true} path={baseUrl} component={Index}/>\n        </Switch>\n    }\n};\n\nfunction Index() {\n    const classes = useUniversalStyles();\n    const carousel1 = process.env.PUBLIC_URL + \"/carousel1.jpg\";\n    const carousel2 = process.env.PUBLIC_URL + \"/carousel2.jpg\";\n    const carousel3 = process.env.PUBLIC_URL + \"/carousel3.jpg\";\n    return (<div>\n            <Typography className={classes.title} variant=\"h5\" id=\"tableTitle\">\n                About us\n            </Typography>\n            <Carousel>\n                <div className={classes.carousel}>\n                    <img src={carousel1}/>\n                    <p className=\"legend\">Hard work</p>\n                </div>\n                <div className={classes.carousel}>\n                    <img src={carousel2}/>\n                    <p className=\"legend\">Team</p>\n                </div>\n                <div className={classes.carousel}>\n                    <img src={carousel3}/>\n                    <p className=\"legend\">Passion</p>\n                </div>\n            </Carousel>\n\n        </div>\n    );\n}","import React from \"react\";\nimport {Route, RouteComponentProps, Switch} from \"react-router\";\nimport SimpleTable, {ColumnModel} from \"../../core/components/SimpleTable/SimpleTable\";\n\nexport const Builds = {\n    url: \"builds\",\n    handler: (props: RouteComponentProps<any>) => {\n        const baseUrl = props.match.url;\n        return <Switch>\n            <Route exact={true} path={baseUrl} component={Index}/>\n        </Switch>\n    }\n};\n\nconst columns: ColumnModel[] = [\n    {name: \"id\", title: \"Id\"},\n    {name: \"number\", title: \"Number\"},\n    {name: \"state\", title: \"State\"},\n    {name: \"event_type\", title: \"Event type\"},\n    {name: \"started_at\", title: \"Started at\"},\n    {name: \"finished_at\", title: \"Finished at\"},\n\n];\n\nfunction Index() {\n    return (\n        <div>\n            <SimpleTable title={\"Builds\"}\n                         resourceName={\"builds\"}\n                         columns={columns}\n                         filterField={\"event_type\"}\n            />\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport {Route, RouteComponentProps, Switch} from \"react-router\";\nimport SimpleTable, {ColumnModel} from \"../../core/components/SimpleTable/SimpleTable\";\n\nexport const Branches = {\n    url: \"branches\",\n    handler: (props: RouteComponentProps<any>) => {\n        const baseUrl = props.match.url;\n        return <Switch>\n            <Route exact={true} path={baseUrl} component={Index}/>\n        </Switch>\n    }\n};\n\nconst columns: ColumnModel[] = [\n    {name: \"name\", title: \"Name\"},\n    {name: \"default_branch\", title: \"Repository\"},\n    {name: \"exists_on_github\", title: \"Last build\"},\n\n];\n\nfunction Index() {\n    return (\n        <div>\n            <SimpleTable title={\"Branches\"}\n                         resourceName={\"branches\"}\n                         columns={columns}\n                         filterField={\"name\"}\n            />\n        </div>\n    );\n}\n\n","import {RouteComponentProps} from \"react-router\";\nimport {About} from \"../../feature/aboutUs/views\";\nimport {Builds} from \"../../feature/builds/views\";\nimport {Branches} from \"../../feature/branches/views\";\n\ninterface MainRoute {\n    url: string;\n    handler: (props: RouteComponentProps<any>) => any;\n}\n\nexport const routes: MainRoute[] = [\n    About,\n    Builds,\n    Branches\n];\n","import {Route, RouteComponentProps} from \"react-router-dom\";\nimport {Layout} from \"../../core/components/Layouts/Layout\";\nimport {mainItems} from \"../../core/config/items\";\nimport {routes} from \"../../core/config/routes\";\nimport React from \"react\";\n\nexport function mainView({match}: RouteComponentProps<any>) {\n    const logo = process.env.PUBLIC_URL + \"/logo.png\";\n    const headerTitle = \"Test Management\";\n    const landingPageLink = \"/list\";\n    const repoLink = process.env.REACT_APP_REPO_LINK || \"https://github.com/\";\n    const appVersion = process.env.REACT_APP_VERSION || \"1.0\";\n\n\n    return (\n        <Layout\n            appTitle={headerTitle}\n            logo={logo}\n            items={mainItems}\n            landingPageLink={landingPageLink}\n            repoLink={repoLink}\n            appVersion={appVersion}\n        >\n            {Object.keys(routes).map((route: any) => {\n                const url = match.url + routes[route].url;\n                const handler = routes[route].handler;\n                return <Route key={url} path={url} render={handler}/>;\n            })}\n        </Layout>\n    );\n}\n\n","import React from \"react\";\nimport { CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport {\n    Redirect,\n    Route,\n    Router, Switch,\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport {theme} from \"./core/config/theme\";\nimport {mainStore, StoreContext} from \"./core/stores/stores\";\nimport {mainView} from \"./feature/layout/mainView\";\n\nfunction App() {\n    const history = createBrowserHistory();\n    return (\n          <MuiThemeProvider theme={theme}>\n              <CssBaseline />\n                <StoreContext.Provider value={mainStore}>\n                    <Router history={history}>\n                      <Switch>\n                          <Route path=\"\" render={mainView} />\n                          <Route path=\"/aboutUs\" />\n                          <Redirect to=\"/list\" from=\"\" exact={true} />\n                      </Switch>\n                  </Router>\n                </StoreContext.Provider>\n          </MuiThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}